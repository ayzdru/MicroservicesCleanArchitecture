@page "/"
@inject Product.ProductClient ProductClient
@inject IAccessTokenProvider AuthenticationService
@using Google.Protobuf.WellKnownTypes
@inject BasketState BasketState
@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card-columns">
        @foreach (var product in products)
        {
            <Card>
                <CardImage Source="https://picsum.photos/277/180" Alt="Placeholder image">
                </CardImage>
                <CardBody>
                    <CardTitle Size="5">@product.Name</CardTitle>
                    <CardText>
                        @product.Description
                    </CardText>
                    <Button Color="Color.Primary" Clicked="OnAddProductToBasket">Sepete Ekle</Button>
                </CardBody>
                <CardFooter>
                    <small class="text-muted">@product.Price₺</small>
                </CardFooter>
            </Card>
        }
    </div>
}
@code {
    private IList<ProductResponse>? products;

    protected override async Task OnInitializedAsync()
    {
        products = (await ProductClient.GetProductsAsync(new Empty())).Products;

        //var tokenResult = await AuthenticationService.RequestAccessToken();
        //if (tokenResult.TryGetToken(out var token))
        //{
        //    var headers = new Metadata();
        //    headers.Add("Authorization", $"Bearer {token.Value}");
        //    products = (await client.GetProductsAsync(new Empty(), headers)).Products;
        //}

    }
    void OnAddProductToBasket()
    {
        BasketState.OrderCount++;
    }

}
